:root {
  --bg: #0b1020;      /* 画面下地（濃紺） */
  --panel: #121a2f;   /* セクション背景 */
  --card: #0f172a;    /* カード背景 */
  --muted: #94a3b8;
  --text: #e5e7eb;
  --brand: #0ea5e9;
  --ok: #10b981;
  --warn: #f59e0b;
  --error: #ef4444;
  --ring: #38bdf8;
  --shadow: 0 6px 24px rgba(2,8,23,.24), 0 1px 2px rgba(2,8,23,.36);
}

/* 下地とタイポ */
* { box-sizing: border-box }
html, body, #root { min-height: 100% }
body {
  margin: 0;
  font: 14px/1.6 system-ui, -apple-system, Segoe UI, Roboto, "Noto Sans JP", sans-serif;
  background: var(--bg);
  color: var(--text);
}

/* コンテナ */
.container {
  max-width: 1100px;
  width: 100%;
  margin: 0 auto;
  padding: 16px;
  padding-left: clamp(12px, 4vw, 24px);
  padding-right: clamp(12px, 4vw, 24px);
}

/* 見出し */
h1 { font-size: 22px; margin: 0 0 12px }
h2 { font-size: 18px; margin: 16px 0 8px }

/* パネル */
.panel {
  background: var(--panel);
  border: 1px solid #1e293b;
  border-radius: 12px;
  padding: 12px;
  box-shadow: var(--shadow);
  overflow: hidden; /* 塗り漏れ防止 */
}

/* タブ */
.tabs-bar {
  display: flex; gap: 8px;
  border-bottom: 1px solid #1e293b;
  margin: 0 0 12px; padding-bottom: 8px;
}
.tab {
  background: transparent; color: #cbd5e1;
  border: 1px solid #253149; border-bottom: none;
  padding: 8px 12px; border-top-left-radius: 10px; border-top-right-radius: 10px;
  cursor: pointer;
}
.tab.active {
  background: #0b1223; color: #fff; border-color: #38bdf8;
  box-shadow: var(--shadow);
}
.tab:not(.active):hover { border-color: #334155 }

/* ボタン */
.btn {
  display: inline-flex; align-items: center; gap: 8px;
  background: var(--brand); color: #fff; border: none; border-radius: 10px;
  padding: 8px 12px; cursor: pointer;
  transition: transform .06s ease, filter .2s;
}
.btn:active { transform: translateY(1px) }
.btn.neutral { background: #334155 }
.btn.ok { background: var(--ok) }
.btn.warn { background: var(--warn) }
.btn.ghost { background: transparent; border: 1px solid #334155; color: #cbd5e1 }

/* 入力系 */
.input, .select {
  width: 100%; padding: 10px 12px; border-radius: 10px;
  background: #0b1223; border: 1px solid #263246; color: var(--text); outline: none;
}
.input:focus, .select:focus { border-color: var(--ring); box-shadow: 0 0 0 3px rgba(56,189,248,.2) }

/* 数値入力を2桁幅に固定 */
.input--num {
  width: 5ch !important;
  min-width: 5ch;
  max-width: 5ch;
  text-align: center;
  padding-inline: 8px;
}
/* 数値入力の上下矢印を非表示 */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button { -webkit-appearance: none; margin: 0 }
input[type="number"] { -moz-appearance: textfield }

/* バッジ */
.badge {
  font-size: 12px; padding: 2px 8px; border-radius: 999px;
  background: #0b1223; border: 1px solid #253149; color: #cbd5e1;
}

/* トースト */
.toast-wrap { position: fixed; right: 16px; bottom: 16px; display: grid; gap: 8px; z-index: 99999 }
.toast {
  background: #0b1223; color: #e5e7eb; border: 1px solid #253149; border-left: 4px solid var(--brand);
  padding: 10px 12px; border-radius: 10px; box-shadow: var(--shadow);
}
.toast.ok { border-left-color: var(--ok) }
.toast.error { border-left-color: var(--error) }

/* グリッド基礎 */
.grid { display: grid; gap: 12px }

/* 検索ツールバー（スティッキー＆不透明） */
.toolbar {
  position: sticky; top: 0; z-index: 50;
  padding: 12px; margin: 0 0 12px;
  background: var(--panel);
  -webkit-backdrop-filter: none; backdrop-filter: none;
  border-bottom: 1px solid #1e293b;
}
/* レイアウト：PC=5列 → SP=2列 */
.toolbar-grid { grid-template-columns: 1fr repeat(4, minmax(120px, auto)); align-items: center }
@media (max-width: 860px) {
  .toolbar-grid { grid-template-columns: 1fr 1fr; gap: 8px }
  .toolbar-grid .select, .toolbar-grid .btn, .toolbar-grid .input { width: 100% }
}

/* カード一覧のタイル */
.cards-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
  gap: 12px; margin-top: 12px;
}
@media (max-width: 640px) {
  .cards-grid { grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)) }
}
@media (max-width: 420px) {
  .cards-grid { grid-template-columns: repeat(auto-fill, minmax(180px, 1fr)) }
}

/* カード */
.card {
  display: grid; grid-template-columns: 96px 1fr; gap: 10px;
  background: var(--card); border: 1px solid #1e293b; border-radius: 14px; padding: 10px;
  transition: transform .08s ease, box-shadow .2s ease, border-color .2s ease;
}
.card:hover { transform: translateY(-2px); box-shadow: var(--shadow); border-color: #334155 }
.card.owned { outline: 2px solid rgba(16,185,129,.35) }

/* フル幅タイル（画像→コントロール） */
.card.tight { padding: 0; background: var(--card); border-color: #1e293b }
.card.tight .thumb-box { width: 100%; background: transparent }
.card.tight .controls { padding: 8px; background: var(--card) }

/* スマホ時は縦積み */
@media (max-width: 520px) {
  .card { grid-template-columns: 1fr }
}

/* インポート：2列→1列 */
.two-col { display: grid; grid-template-columns: 1fr 1fr; gap: 12px }
@media (max-width: 860px) {
  .two-col { grid-template-columns: 1fr }
}

/* 進捗（現状非表示だが残しておく） */
.progress { height: 10px; background: #0b1223; border-radius: 8px; overflow: hidden; border: 1px solid #22304b }
.progress .fill { height: 100%; background: var(--brand) }

/* iPhoneノッチの安全域（PWA） */
body { padding-bottom: env(safe-area-inset-bottom); overscroll-behavior: none }

/* iOS Safari 強制（念のため） */
@supports (-webkit-touch-callout: none) {
  .toolbar {
    background: var(--panel) !important;
    -webkit-backdrop-filter: none !important;
    backdrop-filter: none !important;
  }
}

/* 検索タブの背景を“統一色”に（段差根絶）
   App.tsx で <section className="panel search-surface"> にしている前提 */
.search-surface,
.search-surface .toolbar,
.search-surface .cards-grid,
.search-surface .card,
.search-surface .card.tight,
.search-surface .card .thumb-box,
.search-surface .card .controls {
  background: var(--panel) !important;
}
.search-surface .card { border-color: #1e293b }

/* 外側はビューポート固定（ページ全体をスクロールさせない） */
.app-viewport{
  height: 100dvh;           /* iOSでも安定する動的vh */
  display: flex;
  flex-direction: column;
  overflow: hidden;
}
.app-viewport .container{
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

/* 検索タブのパネル内を縦分割：ヘッダー固定 + カード部スクロール */
.search-surface{
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  overflow: hidden;         /* 外へはみ出さない */
}

.cards-page{
  flex: 1 1 auto;
  min-height: 0;            /* 内側スクロールを可能にする重要指定 */
  display: flex;
  flex-direction: column;
}

.search-header{
  flex: 0 0 auto;           /* 固定領域（タイトル＋検索ボックス） */
}

/* カードだけスクロールさせる */
.cards-scroll{
  flex: 1 1 auto;
  min-height: 0;            /* これが無いとスクロールが効かない */
  overflow: auto;
  -webkit-overflow-scrolling: touch; /* iOSで滑らか */
  padding-bottom: env(safe-area-inset-bottom); /* PWAのホームバーを避ける */
}

/* すでに .toolbar は不透明＆境界線ありにしてあるのでそのままでOK */

/* === Collect（収集） === */
.pager{
  margin-top: 8px;
  overflow-x: auto;
  overflow-y: hidden;
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
}
.page{
  width: 100%;
  min-height: 0;
  scroll-snap-align: start;
  display: inline-block;
  vertical-align: top;
}
.pager{ white-space: nowrap }
.page{ white-space: normal }

/* 9枚（3x3）グリッド */
.collect-grid{
  width: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 8px;
  padding: 4px 0 8px;
}
.collect-item{
  position: relative;
  display: block;
  border: none;
  padding: 0;
  background: transparent;
  cursor: pointer;
  border-radius: 10px;
  overflow: hidden;
}
.collect-item .dim{
  position: absolute; inset: 0;
  background: rgba(0,0,0,.45);     /* 未所持＝暗く */
  pointer-events: none;
}
.collect-item.owned .dim{ display: none }

/* 横ページ幅を100%にするためのテクニック */
.pager > .page{ width: 100%; }

/* 端末小さい時は隙間を少し詰める */
@media (max-width: 420px){
  .collect-grid{ gap: 6px }
}

/* === Collect（収集） 横スクロールのみ === */
.pager{
  margin-top: 8px;
  display: flex;               /* ← フレックスで横並び */
  overflow-x: auto;
  overflow-y: hidden;
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
}
.page{
  flex: 0 0 100%;              /* ← ビューポート幅＝1ページ */
  scroll-snap-align: start;
}

.collect-grid{
  width: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 8px;
  padding: 4px 0 8px;
}
.collect-item{
  position: relative;
  display: block;
  border: none;
  padding: 0;
  background: transparent;
  cursor: pointer;
  border-radius: 10px;
  overflow: hidden;
}
.collect-item .dim{
  position: absolute; inset: 0;
  background: rgba(0,0,0,.45);   /* 未所持＝暗く */
  pointer-events: none;
}
.collect-item.owned .dim{ display: none }

@media (max-width: 420px){
  .collect-grid{ gap: 6px }
}

/* 画像セル内の余白を完全になくす */
.card.tight { padding: 0; }
.card.tight .thumb-box { padding: 0; margin: 0; }

/* 画像を包む thumb-box が block でフル幅を使えるように */
.thumb-box { display: block; }

/* グリッド間の隙間だけ残して、内側はぴったりに */
.cards-grid .card.tight {
  border-radius: 12px;      /* 見た目キープ用（任意） */
  overflow: hidden;         /* 角丸に画像をフィット */
}
/* 検索グリッドの「画像だけカード」ではグリッドをやめて隙間ゼロに */
.card.tight{
  display: block !important;          /* ← 2カラムgridを停止 */
  grid-template-columns: unset !important;
  padding: 0 !important;
}

/* 画像まわりの余白をゼロに */
.card.tight .thumb-box{
  display: block;
  padding: 0;
  margin: 0;
  background: transparent;
}

/* 画像をセルいっぱいに、余白や行内隙間なしで表示 */
.card.tight .thumb-box img{
  display: block;
  width: 100%;
  height: auto;
  object-fit: contain;                 /* 全体を見せる */
}

/* ボタン由来のデフォルト余白を抑制（検索タブでカード=buttonにしているため） */
.cards-grid .card.tight{
  border: none;                        /* 任意。枠が不要なら */
  box-shadow: none;                    /* 任意 */
}
